// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { Timestamp } from "../../../google/protobuf/Timestamp";

export class RedelegationEntry {
  static encode(message: RedelegationEntry, writer: Writer): void {
    writer.uint32(8);
    writer.int64(message.creationHeight);

    const completionTime = message.completionTime;
    if (completionTime !== null) {
      writer.uint32(18);
      writer.fork();
      Timestamp.encode(completionTime, writer);
      writer.ldelim();
    }

    writer.uint32(26);
    writer.string(message.initialBalance);

    writer.uint32(34);
    writer.string(message.sharesDst);
  }

  static decode(reader: Reader, length: i32): RedelegationEntry {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new RedelegationEntry();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.creationHeight = reader.int64();
          break;

        case 2:
          message.completionTime = Timestamp.decode(reader, reader.uint32());
          break;

        case 3:
          message.initialBalance = reader.string();
          break;

        case 4:
          message.sharesDst = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  creationHeight: i64;
  completionTime: Timestamp | null;
  initialBalance: string;
  sharesDst: string;

  constructor(
    creationHeight: i64 = 0,
    completionTime: Timestamp | null = null,
    initialBalance: string = "",
    sharesDst: string = ""
  ) {
    this.creationHeight = creationHeight;
    this.completionTime = completionTime;
    this.initialBalance = initialBalance;
    this.sharesDst = sharesDst;
  }
}

export function encodeRedelegationEntry(
  message: RedelegationEntry
): Uint8Array {
  return Protobuf.encode(message, RedelegationEntry.encode);
}

export function decodeRedelegationEntry(buffer: Uint8Array): RedelegationEntry {
  return Protobuf.decode<RedelegationEntry>(buffer, RedelegationEntry.decode);
}
