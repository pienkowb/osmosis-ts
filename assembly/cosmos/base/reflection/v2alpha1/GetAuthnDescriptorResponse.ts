// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { AuthnDescriptor } from "./AuthnDescriptor";

export class GetAuthnDescriptorResponse {
  static encode(message: GetAuthnDescriptorResponse, writer: Writer): void {
    const authn = message.authn;
    if (authn !== null) {
      writer.uint32(10);
      writer.fork();
      AuthnDescriptor.encode(authn, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): GetAuthnDescriptorResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new GetAuthnDescriptorResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.authn = AuthnDescriptor.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  authn: AuthnDescriptor | null;

  constructor(authn: AuthnDescriptor | null = null) {
    this.authn = authn;
  }
}

export function encodeGetAuthnDescriptorResponse(
  message: GetAuthnDescriptorResponse
): Uint8Array {
  return Protobuf.encode(message, GetAuthnDescriptorResponse.encode);
}

export function decodeGetAuthnDescriptorResponse(
  buffer: Uint8Array
): GetAuthnDescriptorResponse {
  return Protobuf.decode<GetAuthnDescriptorResponse>(
    buffer,
    GetAuthnDescriptorResponse.decode
  );
}
