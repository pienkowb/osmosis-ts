// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { MsgDescriptor } from "./MsgDescriptor";

export class TxDescriptor {
  static encode(message: TxDescriptor, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.fullname);

    const msgs = message.msgs;
    for (let i: i32 = 0; i < msgs.length; ++i) {
      writer.uint32(18);
      writer.fork();
      MsgDescriptor.encode(msgs[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): TxDescriptor {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new TxDescriptor();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.fullname = reader.string();
          break;

        case 2:
          message.msgs.push(MsgDescriptor.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  fullname: string;
  msgs: Array<MsgDescriptor>;

  constructor(fullname: string = "", msgs: Array<MsgDescriptor> = []) {
    this.fullname = fullname;
    this.msgs = msgs;
  }
}

export function encodeTxDescriptor(message: TxDescriptor): Uint8Array {
  return Protobuf.encode(message, TxDescriptor.encode);
}

export function decodeTxDescriptor(buffer: Uint8Array): TxDescriptor {
  return Protobuf.decode<TxDescriptor>(buffer, TxDescriptor.decode);
}
