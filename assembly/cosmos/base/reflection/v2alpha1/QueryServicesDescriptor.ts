// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { QueryServiceDescriptor } from "./QueryServiceDescriptor";

export class QueryServicesDescriptor {
  static encode(message: QueryServicesDescriptor, writer: Writer): void {
    const queryServices = message.queryServices;
    for (let i: i32 = 0; i < queryServices.length; ++i) {
      writer.uint32(10);
      writer.fork();
      QueryServiceDescriptor.encode(queryServices[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): QueryServicesDescriptor {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new QueryServicesDescriptor();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.queryServices.push(
            QueryServiceDescriptor.decode(reader, reader.uint32())
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  queryServices: Array<QueryServiceDescriptor>;

  constructor(queryServices: Array<QueryServiceDescriptor> = []) {
    this.queryServices = queryServices;
  }
}

export function encodeQueryServicesDescriptor(
  message: QueryServicesDescriptor
): Uint8Array {
  return Protobuf.encode(message, QueryServicesDescriptor.encode);
}

export function decodeQueryServicesDescriptor(
  buffer: Uint8Array
): QueryServicesDescriptor {
  return Protobuf.decode<QueryServicesDescriptor>(
    buffer,
    QueryServicesDescriptor.decode
  );
}
