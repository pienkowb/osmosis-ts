// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { ConfigurationDescriptor } from "./ConfigurationDescriptor";

export class GetConfigurationDescriptorResponse {
  static encode(
    message: GetConfigurationDescriptorResponse,
    writer: Writer
  ): void {
    const config = message.config;
    if (config !== null) {
      writer.uint32(10);
      writer.fork();
      ConfigurationDescriptor.encode(config, writer);
      writer.ldelim();
    }
  }

  static decode(
    reader: Reader,
    length: i32
  ): GetConfigurationDescriptorResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new GetConfigurationDescriptorResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.config = ConfigurationDescriptor.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  config: ConfigurationDescriptor | null;

  constructor(config: ConfigurationDescriptor | null = null) {
    this.config = config;
  }
}

export function encodeGetConfigurationDescriptorResponse(
  message: GetConfigurationDescriptorResponse
): Uint8Array {
  return Protobuf.encode(message, GetConfigurationDescriptorResponse.encode);
}

export function decodeGetConfigurationDescriptorResponse(
  buffer: Uint8Array
): GetConfigurationDescriptorResponse {
  return Protobuf.decode<GetConfigurationDescriptorResponse>(
    buffer,
    GetConfigurationDescriptorResponse.decode
  );
}
