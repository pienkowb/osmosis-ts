// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class Attribute {
  static encode(message: Attribute, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.key);

    writer.uint32(18);
    writer.string(message.value);
  }

  static decode(reader: Reader, length: i32): Attribute {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Attribute();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.key = reader.string();
          break;

        case 2:
          message.value = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  key: string;
  value: string;

  constructor(key: string = "", value: string = "") {
    this.key = key;
    this.value = value;
  }
}

export function encodeAttribute(message: Attribute): Uint8Array {
  return Protobuf.encode(message, Attribute.encode);
}

export function decodeAttribute(buffer: Uint8Array): Attribute {
  return Protobuf.decode<Attribute>(buffer, Attribute.decode);
}
