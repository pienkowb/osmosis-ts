// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class MsgRevokeAllowance {
  static encode(message: MsgRevokeAllowance, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.granter);

    writer.uint32(18);
    writer.string(message.grantee);
  }

  static decode(reader: Reader, length: i32): MsgRevokeAllowance {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgRevokeAllowance();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.granter = reader.string();
          break;

        case 2:
          message.grantee = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  granter: string;
  grantee: string;

  constructor(granter: string = "", grantee: string = "") {
    this.granter = granter;
    this.grantee = grantee;
  }
}

export function encodeMsgRevokeAllowance(
  message: MsgRevokeAllowance
): Uint8Array {
  return Protobuf.encode(message, MsgRevokeAllowance.encode);
}

export function decodeMsgRevokeAllowance(
  buffer: Uint8Array
): MsgRevokeAllowance {
  return Protobuf.decode<MsgRevokeAllowance>(buffer, MsgRevokeAllowance.decode);
}
