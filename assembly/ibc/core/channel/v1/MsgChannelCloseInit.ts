// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class MsgChannelCloseInit {
  static encode(message: MsgChannelCloseInit, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.portId);

    writer.uint32(18);
    writer.string(message.channelId);

    writer.uint32(26);
    writer.string(message.signer);
  }

  static decode(reader: Reader, length: i32): MsgChannelCloseInit {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgChannelCloseInit();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.portId = reader.string();
          break;

        case 2:
          message.channelId = reader.string();
          break;

        case 3:
          message.signer = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  portId: string;
  channelId: string;
  signer: string;

  constructor(
    portId: string = "",
    channelId: string = "",
    signer: string = ""
  ) {
    this.portId = portId;
    this.channelId = channelId;
    this.signer = signer;
  }
}

export function encodeMsgChannelCloseInit(
  message: MsgChannelCloseInit
): Uint8Array {
  return Protobuf.encode(message, MsgChannelCloseInit.encode);
}

export function decodeMsgChannelCloseInit(
  buffer: Uint8Array
): MsgChannelCloseInit {
  return Protobuf.decode<MsgChannelCloseInit>(
    buffer,
    MsgChannelCloseInit.decode
  );
}
