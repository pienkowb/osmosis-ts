// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { Snapshot } from "./Snapshot";

export class ResponseListSnapshots {
  static encode(message: ResponseListSnapshots, writer: Writer): void {
    const snapshots = message.snapshots;
    for (let i: i32 = 0; i < snapshots.length; ++i) {
      writer.uint32(10);
      writer.fork();
      Snapshot.encode(snapshots[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): ResponseListSnapshots {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ResponseListSnapshots();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.snapshots.push(Snapshot.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  snapshots: Array<Snapshot>;

  constructor(snapshots: Array<Snapshot> = []) {
    this.snapshots = snapshots;
  }
}

export function encodeResponseListSnapshots(
  message: ResponseListSnapshots
): Uint8Array {
  return Protobuf.encode(message, ResponseListSnapshots.encode);
}

export function decodeResponseListSnapshots(
  buffer: Uint8Array
): ResponseListSnapshots {
  return Protobuf.decode<ResponseListSnapshots>(
    buffer,
    ResponseListSnapshots.decode
  );
}
