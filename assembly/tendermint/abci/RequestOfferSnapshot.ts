// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { Snapshot } from "./Snapshot";

export class RequestOfferSnapshot {
  static encode(message: RequestOfferSnapshot, writer: Writer): void {
    const snapshot = message.snapshot;
    if (snapshot !== null) {
      writer.uint32(10);
      writer.fork();
      Snapshot.encode(snapshot, writer);
      writer.ldelim();
    }

    writer.uint32(18);
    writer.bytes(message.appHash);
  }

  static decode(reader: Reader, length: i32): RequestOfferSnapshot {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new RequestOfferSnapshot();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.snapshot = Snapshot.decode(reader, reader.uint32());
          break;

        case 2:
          message.appHash = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  snapshot: Snapshot | null;
  appHash: Uint8Array;

  constructor(
    snapshot: Snapshot | null = null,
    appHash: Uint8Array = new Uint8Array(0)
  ) {
    this.snapshot = snapshot;
    this.appHash = appHash;
  }
}

export function encodeRequestOfferSnapshot(
  message: RequestOfferSnapshot
): Uint8Array {
  return Protobuf.encode(message, RequestOfferSnapshot.encode);
}

export function decodeRequestOfferSnapshot(
  buffer: Uint8Array
): RequestOfferSnapshot {
  return Protobuf.decode<RequestOfferSnapshot>(
    buffer,
    RequestOfferSnapshot.decode
  );
}
