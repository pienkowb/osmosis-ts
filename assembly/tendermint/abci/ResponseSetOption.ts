// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class ResponseSetOption {
  static encode(message: ResponseSetOption, writer: Writer): void {
    writer.uint32(8);
    writer.uint32(message.code);

    writer.uint32(26);
    writer.string(message.log);

    writer.uint32(34);
    writer.string(message.info);
  }

  static decode(reader: Reader, length: i32): ResponseSetOption {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ResponseSetOption();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.code = reader.uint32();
          break;

        case 3:
          message.log = reader.string();
          break;

        case 4:
          message.info = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  code: u32;
  log: string;
  info: string;

  constructor(code: u32 = 0, log: string = "", info: string = "") {
    this.code = code;
    this.log = log;
    this.info = info;
  }
}

export function encodeResponseSetOption(
  message: ResponseSetOption
): Uint8Array {
  return Protobuf.encode(message, ResponseSetOption.encode);
}

export function decodeResponseSetOption(buffer: Uint8Array): ResponseSetOption {
  return Protobuf.decode<ResponseSetOption>(buffer, ResponseSetOption.decode);
}
