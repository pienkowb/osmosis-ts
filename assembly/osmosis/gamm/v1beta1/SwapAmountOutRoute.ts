// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class SwapAmountOutRoute {
  static encode(message: SwapAmountOutRoute, writer: Writer): void {
    writer.uint32(8);
    writer.uint64(message.poolId);

    writer.uint32(18);
    writer.string(message.tokenInDenom);
  }

  static decode(reader: Reader, length: i32): SwapAmountOutRoute {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new SwapAmountOutRoute();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;

        case 2:
          message.tokenInDenom = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  poolId: u64;
  tokenInDenom: string;

  constructor(poolId: u64 = 0, tokenInDenom: string = "") {
    this.poolId = poolId;
    this.tokenInDenom = tokenInDenom;
  }
}

export function encodeSwapAmountOutRoute(
  message: SwapAmountOutRoute
): Uint8Array {
  return Protobuf.encode(message, SwapAmountOutRoute.encode);
}

export function decodeSwapAmountOutRoute(
  buffer: Uint8Array
): SwapAmountOutRoute {
  return Protobuf.decode<SwapAmountOutRoute>(buffer, SwapAmountOutRoute.decode);
}
