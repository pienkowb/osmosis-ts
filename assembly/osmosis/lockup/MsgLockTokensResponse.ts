// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

@unmanaged
export class MsgLockTokensResponse {
  static encode(message: MsgLockTokensResponse, writer: Writer): void {
    writer.uint32(8);
    writer.uint64(message.iD);
  }

  static decode(reader: Reader, length: i32): MsgLockTokensResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgLockTokensResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.iD = reader.uint64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  iD: u64;

  constructor(iD: u64 = 0) {
    this.iD = iD;
  }
}

export function encodeMsgLockTokensResponse(
  message: MsgLockTokensResponse
): Uint8Array {
  return Protobuf.encode(message, MsgLockTokensResponse.encode);
}

export function decodeMsgLockTokensResponse(
  buffer: Uint8Array
): MsgLockTokensResponse {
  return Protobuf.decode<MsgLockTokensResponse>(
    buffer,
    MsgLockTokensResponse.decode
  );
}
