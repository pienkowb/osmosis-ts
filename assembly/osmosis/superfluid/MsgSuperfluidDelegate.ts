// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

export class MsgSuperfluidDelegate {
  static encode(message: MsgSuperfluidDelegate, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.sender);

    writer.uint32(16);
    writer.uint64(message.lockId);

    writer.uint32(26);
    writer.string(message.valAddr);
  }

  static decode(reader: Reader, length: i32): MsgSuperfluidDelegate {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgSuperfluidDelegate();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;

        case 2:
          message.lockId = reader.uint64();
          break;

        case 3:
          message.valAddr = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  sender: string;
  lockId: u64;
  valAddr: string;

  constructor(sender: string = "", lockId: u64 = 0, valAddr: string = "") {
    this.sender = sender;
    this.lockId = lockId;
    this.valAddr = valAddr;
  }
}

export function encodeMsgSuperfluidDelegate(
  message: MsgSuperfluidDelegate
): Uint8Array {
  return Protobuf.encode(message, MsgSuperfluidDelegate.encode);
}

export function decodeMsgSuperfluidDelegate(
  buffer: Uint8Array
): MsgSuperfluidDelegate {
  return Protobuf.decode<MsgSuperfluidDelegate>(
    buffer,
    MsgSuperfluidDelegate.decode
  );
}
