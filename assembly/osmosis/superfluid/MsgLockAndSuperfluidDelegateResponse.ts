// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";

@unmanaged
export class MsgLockAndSuperfluidDelegateResponse {
  static encode(
    message: MsgLockAndSuperfluidDelegateResponse,
    writer: Writer
  ): void {
    writer.uint32(8);
    writer.uint64(message.iD);
  }

  static decode(
    reader: Reader,
    length: i32
  ): MsgLockAndSuperfluidDelegateResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MsgLockAndSuperfluidDelegateResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.iD = reader.uint64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  iD: u64;

  constructor(iD: u64 = 0) {
    this.iD = iD;
  }
}

export function encodeMsgLockAndSuperfluidDelegateResponse(
  message: MsgLockAndSuperfluidDelegateResponse
): Uint8Array {
  return Protobuf.encode(message, MsgLockAndSuperfluidDelegateResponse.encode);
}

export function decodeMsgLockAndSuperfluidDelegateResponse(
  buffer: Uint8Array
): MsgLockAndSuperfluidDelegateResponse {
  return Protobuf.decode<MsgLockAndSuperfluidDelegateResponse>(
    buffer,
    MsgLockAndSuperfluidDelegateResponse.decode
  );
}
