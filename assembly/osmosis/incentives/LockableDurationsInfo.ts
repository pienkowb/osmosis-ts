// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.2.0
//   protoc        v3.21.12

import { Writer, Reader, Protobuf } from "as-proto/assembly";
import { Duration } from "../../google/protobuf/Duration";

export class LockableDurationsInfo {
  static encode(message: LockableDurationsInfo, writer: Writer): void {
    const lockableDurations = message.lockableDurations;
    for (let i: i32 = 0; i < lockableDurations.length; ++i) {
      writer.uint32(10);
      writer.fork();
      Duration.encode(lockableDurations[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): LockableDurationsInfo {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new LockableDurationsInfo();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.lockableDurations.push(
            Duration.decode(reader, reader.uint32())
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  lockableDurations: Array<Duration>;

  constructor(lockableDurations: Array<Duration> = []) {
    this.lockableDurations = lockableDurations;
  }
}

export function encodeLockableDurationsInfo(
  message: LockableDurationsInfo
): Uint8Array {
  return Protobuf.encode(message, LockableDurationsInfo.encode);
}

export function decodeLockableDurationsInfo(
  buffer: Uint8Array
): LockableDurationsInfo {
  return Protobuf.decode<LockableDurationsInfo>(
    buffer,
    LockableDurationsInfo.decode
  );
}
